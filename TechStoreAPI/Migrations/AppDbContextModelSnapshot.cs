// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechStoreAPI.Data;

#nullable disable

namespace TechStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TechStoreAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dispositivos móviles avanzados con capacidades de computación.",
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Computadoras portátiles para trabajo y entretenimiento.",
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dispositivos móviles con pantallas táctiles y portabilidad.",
                            Name = "Tablets"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Complementos tecnológicos como auriculares, cargadores, y más.",
                            Name = "Accesorios"
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av. Siempre Viva 123, Ciudad",
                            Email = "juan.perez@example.com",
                            Name = "Juan Pérez",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Falsa 456, Ciudad",
                            Email = "maria.lopez@example.com",
                            Name = "María López",
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Paseo de la Reforma 789, Ciudad",
                            Email = "carlos.garcia@example.com",
                            Name = "Carlos García",
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Calle del Sol 101, Ciudad",
                            Email = "ana.martinez@example.com",
                            Name = "Ana Martínez",
                            PhoneNumber = "456-789-0123"
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreatedAt = new DateTime(2024, 10, 3, 13, 24, 51, 981, DateTimeKind.Utc).AddTicks(9616),
                            State = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreatedAt = new DateTime(2024, 10, 2, 13, 24, 51, 981, DateTimeKind.Utc).AddTicks(9617),
                            State = "Shipped"
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreatedAt = new DateTime(2024, 10, 1, 13, 24, 51, 981, DateTimeKind.Utc).AddTicks(9624),
                            State = "Delivered"
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreatedAt = new DateTime(2024, 9, 30, 13, 24, 51, 981, DateTimeKind.Utc).AddTicks(9625),
                            State = "Pending"
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 699.99m,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Price = 299.99m,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            Price = 999.99m,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 3,
                            Price = 49.99m,
                            ProductId = 4,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Smartphone de Apple con pantalla de 6.1 pulgadas.",
                            Name = "iPhone 13",
                            Price = 799.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Smartphone de Samsung con tecnología de cámara avanzada.",
                            Name = "Samsung Galaxy S21",
                            Price = 699.99m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Laptop compacta y poderosa con pantalla InfinityEdge.",
                            Name = "Dell XPS 13",
                            Price = 999.99m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Tablet de Apple con chip M1 y pantalla Liquid Retina.",
                            Name = "iPad Pro",
                            Price = 1099.99m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "Ratón ergonómico avanzado para productividad.",
                            Name = "Logitech MX Master 3",
                            Price = 99.99m,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Admin User",
                            Password = "AdminPass123",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@example.com",
                            Name = "Regular User",
                            Password = "UserPass123",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("TechStoreAPI.Models.Order", b =>
                {
                    b.HasOne("TechStoreAPI.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TechStoreAPI.Models.OrderProduct", b =>
                {
                    b.HasOne("TechStoreAPI.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechStoreAPI.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Product", b =>
                {
                    b.HasOne("TechStoreAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechStoreAPI.Models.User", b =>
                {
                    b.HasOne("TechStoreAPI.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("TechStoreAPI.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
